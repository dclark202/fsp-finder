services:
  # --- Redis Service ---
  redis:
    image: "redis:alpine"
    restart: unless-stopped
    ports:
      - "6379:6379"

# --- Public entry point ---
  nginx:
    image: nginx:alpine
    restart: unless-stopped
    ports:
      # Expose HTTP and HTTPS ports to the host machine
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      # Mount your SSL certificates from the host into the container
      - C:/tools/win-acme:/etc/letsencrypt/live:ro # CHANGED: Map your cert folder
      # Mount a volume for Let's Encrypt challenges
      - C:/Users/dacla/Documents/gh/fsp-finder/acme-challenge:/var/www/certbot
      # Mount the application's static files for Nginx to serve directly
      - .:/app  # Assuming static files are in ./static
    depends_on:
      - web

  # --- FastAPI Web Server Service ---
  web:
    build:
      context: .
      dockerfile: .Dockerfile
      # ADD THIS SECTION to pass the token during the build
      args:
        - HF_TOKEN=${HF_TOKEN}
    restart: unless-stopped
    command: uvicorn app:app --host 0.0.0.0 --port 8000 --proxy-headers # --reload
    env_file:
      - .env
    volumes:
      # Mounts code for live updates
      - .:/app
      # Mounts a named volume for uploads to persist data and handle permissions
      - app_data:/app/uploads
      - training_data:/app/training_data
      - job_artifacts:/job_artifacts
      - model_cache:/model-cache
      # - certbot_data:/var/www/certbot
    depends_on:
      - redis

  # --- Celery Worker Service ---
  worker:
    build:
      context: .
      dockerfile: .Dockerfile
      # ADD THIS SECTION to pass the token during the build
      args:
        - HF_TOKEN=${HF_TOKEN}
    restart: unless-stopped
    command: celery -A celery_worker.celery_app worker --loglevel=info -P solo
    # command: watchmedo auto-restart --directory=./ --pattern=*.py --recursive -- celery -A celery_worker.celery_app worker --loglevel=info -P solo
    env_file:
      - .env
    volumes:
      # Mounts code for live updates
      - .:/app
      # Share the same named volumes with the web service
      - app_data:/app/uploads
      - training_data:/app/training_data
      - job_artifacts:/job_artifacts
      - model_cache:/model-cache
    depends_on:
      - redis
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
  beat:
    build:
      context: .
      dockerfile: .Dockerfile
      # ADD THIS SECTION to pass the token during the build
      args:
        - HF_TOKEN=${HF_TOKEN}
    restart: unless-stopped
    command: celery -A celery_worker.celery_app beat --loglevel=info
    env_file:
      - .env
    volumes:
      # Mount volumes needed for file system access during cleanup checks
      - .:/app
      - app_data:/app/uploads
      - job_artifacts:/job_artifacts
      - model_cache:/model-cache
    depends_on:
      - redis

# --- Define the named volumes at the bottom ---
volumes:
  app_data:
  training_data:
  job_artifacts:
  model_cache:
  # certbot_data: