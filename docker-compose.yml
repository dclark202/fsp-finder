# Docker Compose configuration file version 3.8
version: "3.8"

services:
  # --- Redis Service ---
  # Acts as the message broker for Celery and stores task results.
  redis:
    image: "redis:alpine" # Use a lightweight official Redis image
    restart: unless-stopped
    ports:
      # Expose Redis on the host machine for potential debugging (optional)
      - "6379:6379"

  # --- FastAPI Web Server Service ---
  # Handles HTTP requests from users, serves the frontend, and queues tasks.
  web:
    build: . # Build from the Dockerfile in the current directory
    restart: unless-stopped
    command: uvicorn app:app --host 0.0.0.0 --port 8000
    ports:
      # Map port 80 on the host machine to port 8000 in the container.
      # Users will access the app via http://localhost:80
      - "80:8000"
    volumes:
      # Mounts the current directory into the container for live code updates during development.
      # For production, you might remove this line to use the code baked into the image.
      - .:/app
    depends_on:
      - redis # Ensures Redis starts before the web server attempts to connect.

  # --- Celery Worker Service ---
  # Executes the heavy ML/GPU tasks in the background.
  worker:
    build: . # Reuse the same image built for the web service
    restart: unless-stopped
    command: celery -A celery_worker.celery_app worker --loglevel=info -P solo
    volumes:
      # Mount code for development consistency. Also ensure access to created/downloaded files.
      - .:/app
    depends_on:
      - redis # Ensures Redis starts before the worker attempts to connect.
    deploy:
      resources:
        reservations:
          devices:
            # Grants the container access to the host machine's GPU resources.
            # Requires NVIDIA Container Toolkit to be installed on the host.
            - driver: nvidia
              count: all # or "1" to limit to a single GPU
              capabilities: [gpu]