services:
  # --- Redis Service ---
  redis:
    image: "redis:alpine"
    restart: unless-stopped
    ports:
      - "6379:6379"

  # --- FastAPI Web Server Service ---
  web:
    build:
      context: .
      dockerfile: .Dockerfile
    restart: unless-stopped
    command: uvicorn app:app --host 0.0.0.0 --port 8000
    ports:
      - "80:8000"
    env_file:
      - .env
    volumes:
      # Mounts code for live updates
      - .:/app
      # Mounts a named volume for uploads to persist data and handle permissions
      - app_data:/app/uploads
      - training_data:/app/training_data # Add this for your training data as well
      - job_artifacts:/job_artifacts
    depends_on:
      - redis

  # --- Celery Worker Service ---
  worker:
    build:
      context: .
      dockerfile: .Dockerfile
    restart: unless-stopped
    command: celery -A celery_worker.celery_app worker --loglevel=info -P solo
    env_file:
      - .env
    volumes:
      # Mounts code for live updates
      - .:/app
      # Share the same named volumes with the web service
      - app_data:/app/uploads
      - training_data:/app/training_data # Add this for your training data as well
      - job_artifacts:/job_artifacts
    depends_on:
      - redis
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
  beat:
    build:
      context: .
      dockerfile: .Dockerfile
    restart: unless-stopped
    command: celery -A celery_worker.celery_app beat --loglevel=info
    env_file:
      - .env
    volumes:
      # Mount volumes needed for file system access during cleanup checks
      - .:/app
      - app_data:/app/uploads
      - job_artifacts:/job_artifacts
    depends_on: 
      - redis

# --- Define the named volumes at the bottom ---
volumes:
  app_data:
  training_data:
  job_artifacts: